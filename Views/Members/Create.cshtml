@model MemberApp.ViewModels.AddMemberViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@* new Design *@
<div class="container">

    @using (Html.BeginForm("Create", "Members", FormMethod.Post, new { @class = "form-horizontal", role = "form",enctype="multipart/form-data" , onsubmit = "asd(this)" ,id="myForm"}))

    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <h2>Add New Member</h2>
        <br />
        <div class="col-lg-8">
            <div class="row">
                <div class="form-group col-sm-6">

                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-6">

                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>





            <div class="row">

                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label " })
                    <div>
                        <select class="form-control" name="Country" id="Country">
                        </select>
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    <div>
                        <select class="form-control" name="City" id="City">
                        </select>
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>




            </div>


            <div class="row">
                <div class="form-group col-sm-6">
                    <label class="control-label">Gender</label>
                    <div class="">
                        <div class="row">
                            <div class="col-sm-4">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model=>model.IsMale,true) Male
                                </label>
                            </div>
                            <div class="col-sm-4">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.IsMale,false) Female
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.IsMale, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>





                <div class="form-group col-sm-6">

                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Birth Date",type="date" , id ="birthDate" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>



                
            </div>


            <div class="row">



                <div class="form-group col-sm-6">

                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Phone Number" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-sm-6">

                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Email Address" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                              


            </div>

            <div class="row">
                <div class="form-group col-sm-12">
                    @Html.LabelFor(model => model.Notes, new {@class = "control-label"})
                    @Html.TextAreaFor(model => model.Notes, new {@class="form-control",rows="4"})
                </div>
            </div>

            <div class="row">
                <div class="form-group">

                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" }) 
                            <span style="margin-left:25px;">Is Active</span>
                        </div>
                    </div>
                </div>
            </div>


        </div>




        <div class="col-sm-4">
            <label class="control-label">User Profile Image</label>
            <figure class="figure">
                <img src="~/Content/images/placeholder.jpg" class="figure-img img-fluid rounded" style="width:100%;height:100%" alt="image placeholder" id="theimage" >

            </figure>

            <div class="form-group">


                
        @Html.TextBoxFor(model => model.UploadedImage, new { type = "file", @class = "form-control-file", accept = "image/x-png,image/gif,image/jpeg", id = "UploadedImage" })

        
                
            </div>



        </div>

        


        <div class="row" style="display:block">
            <div class="col-lg-12">
                <div class="col-lg-2">
                    <button type="submit" class="btn btn-primary btn-block" id="submitButton">Save</button>

                </div>
                <div class="col-lg-2">
                    @Html.ActionLink("View All Members","index","Members",new {@class="btn btn-primary btn-block"})
                    
                </div>
            </div>
        </div>
    } <!-- /form -->
</div> <!-- ./container -->

{



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <style>
        body {
            background-color: cadetblue;
            background-size: cover;
        }

        *[role="form"] {
            max-width: 1200px;
            padding: 40px;
            margin: 0 auto;
            border-radius: 0.3em;
            background-color: #f2f2f2;
        }

            *[role="form"] h2 {
                font-family: 'Open Sans', sans-serif;
                font-size: 40px;
                font-weight: 600;
                color: #000000;
                margin-top: 5%;
                text-align: center;
                text-transform: uppercase;
                letter-spacing: 4px;
            }


        .form-horizontal .form-group {
            margin-right: -5px;
            margin-left: -5px;
            padding-right: 15px;
            padding-left: 15px;
        }


        input, select, textarea {
            max-width: 1000px;
        }

        .checkbox input[type="checkbox"] {
            margin-left: 0px;
        }
    </style>
    <script>

        document.getElementById("submitButton").addEventListener("click", function (event) {
            event.preventDefault()
            if ($("#myForm").valid()) {
                toastr.success('Member Added Successfully!');
                setTimeout(function () {
                    document.getElementById("myForm").submit();
                }, 1000);
            } else {
                toastr.error("There is Some Error")
            }
        });






        $(document).ready(function () {
            $.ajax({
                url: "https://ezcmd.com/apps/api_ezhigh/get_countries/4fb9053ed922555eea3496eb27eac35b/929",
                method: "get",
                type: "json",
                success: function (data) {
                    console.log("get it ")


                    var s = '<option value="-1"> Select Country </option>';
                    for (var i = 0; i < 247; i++) {
                        s += '<option value="' + data[i].country_code + '">' + data[i].country_name + '</option>';
                    }
                    $("#Country").html(s);


                }

            })





            $("#Country").change(function () {
                var countryCode = $(this).children("option:selected").val();
                $.ajax({
                    url: "https://ezcmd.com/apps/api_ezhigh/get_hierarchy/4fb9053ed922555eea3496eb27eac35b/929?country_code=" + countryCode + "&level=1",
                    method: "get",
                    type: "json",
                    success: function (data) {
                        console.log("get cities ")

                        var count = Object.keys(data).length

                        console.log(count)

                        var d = '<option value="">Select City </option>';
                        for (var i = 1; i < count - 2; i++) {
                            d += '<option value="' + data[i].label + '">' + data[i].label + '</option>';
                        }
                        $("#City").html(d);


                    }

                })





            })


            $("#UploadedImage").change(function () {
                
                readURL(this);
            });



            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("#theimage").attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }





        })








    </script>


    @Scripts.Render("~/bundles/jqueryval")
}
